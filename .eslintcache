[{"C:\\Users\\betha\\React Apps\\counter-app\\src\\index.js":"1","C:\\Users\\betha\\React Apps\\counter-app\\src\\App.js":"2","C:\\Users\\betha\\React Apps\\counter-app\\src\\reportWebVitals.js":"3","C:\\Users\\betha\\React Apps\\counter-app\\src\\components\\counter.jsx":"4","C:\\Users\\betha\\React Apps\\counter-app\\src\\components\\counters.jsx":"5","C:\\Users\\betha\\React Apps\\counter-app\\src\\components\\navbar.jsx":"6"},{"size":270,"mtime":1612324214681,"results":"7","hashOfConfig":"8"},{"size":1892,"mtime":1612326948890,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":967,"mtime":1612321699024,"results":"11","hashOfConfig":"8"},{"size":980,"mtime":1612327341328,"results":"12","hashOfConfig":"8"},{"size":328,"mtime":1612324752726,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"z6xonp",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},"C:\\Users\\betha\\React Apps\\counter-app\\src\\index.js",["29"],"C:\\Users\\betha\\React Apps\\counter-app\\src\\App.js",[],"C:\\Users\\betha\\React Apps\\counter-app\\src\\reportWebVitals.js",[],["30","31"],"C:\\Users\\betha\\React Apps\\counter-app\\src\\components\\counter.jsx",["32"],"import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {  \r\n    //refactored this to rely entirely on the props\r\n    render() {  \r\n        let classes = this.getBadgeClasses();\r\n      \r\n        return (\r\n        <div>\r\n            <span className={this.getBadgeClasses()}>{this.props.counter.value}</span>\r\n            <button onClick={() => this.props.onIncrement(this.props.counter)}  className=\"btn btn-secondary btn-sm\">Increment</button>\r\n            <button onClick={() => this.props.onDelete(this.props.counter.id)} className=\"btn btn-danger btn-sm m-2\">Delete</button>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    getBadgeClasses() {\r\n        let classes = \"badge m-2 \";\r\n        classes += this.props.counter.value === 0 ? \"badge-warning\" : \"badge-primary\";\r\n        return classes;\r\n    }\r\n\r\n    formatCount() {\r\n       const {value} = this.props.counter;\r\n       return value === 0 ? 'Zero' : value;\r\n    }\r\n}\r\n \r\nexport default Counter;","C:\\Users\\betha\\React Apps\\counter-app\\src\\components\\counters.jsx",[],"C:\\Users\\betha\\React Apps\\counter-app\\src\\components\\navbar.jsx",["33"],"import React, { Component } from 'react';\r\n\r\nclass NavBar extends Component {\r\n    render() { \r\n        return (  \r\n        <nav className=\"navbar navbar-light bg-light\">\r\n            <a className=\"navbar-brand\" href=\"#\">\r\n                Navbar\r\n            </a>\r\n        </nav>\r\n        );\r\n    }\r\n}\r\n \r\nexport default NavBar;",{"ruleId":"34","severity":1,"message":"35","line":5,"column":8,"nodeType":"36","messageId":"37","endLine":5,"endColumn":23},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"34","severity":1,"message":"42","line":6,"column":13,"nodeType":"36","messageId":"37","endLine":6,"endColumn":20},{"ruleId":"43","severity":1,"message":"44","line":7,"column":13,"nodeType":"45","endLine":7,"endColumn":50},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["46"],"no-negated-in-lhs",["47"],"'classes' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]